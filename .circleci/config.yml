---
version: 2

jobs:
  build:
    docker:
      - image: cimg/python:3.9.2
      - image: cimg/postgres:11.15
        environment:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
    environment:
       BASH_ENV: /root/.bashrc
    steps:
      - checkout
      - run:
          name: Get the base reference branch
          command: export BASE_BRANCH=$(base_branch)
      - restore_cache:
          keys:
            - py-cache-v2-{{ arch }}-{{ checksum "pyproject.toml" }}
            - py-cache-v2-{{ arch }}-{{ .Branch }}
            - py-cache-v2-{{ arch }}-{{ .Environment.BASE_BRANCH }}
      - run:
          name: Install python dependencies
          command: |
            virtualenv venv
            source venv/bin/activate
            make deps
      - save_cache:
          key: py-cache-v2-{{ arch }}-{{ checksum "pyproject.toml" }}
          paths:
            - venv
      - save_cache:
          key: py-cache-v2-{{ arch }}-{{ .Branch }}
          paths:
            - venv
      - run:
          name: Run tests
          environment:
            DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres
            UDATA_INSTANCE_NAME: udata
          command: |
            source venv/bin/activate
            make test
      - store_test_results:
          path: reports/python
      - run:
          name: Build a distributable package
          command: |
            source venv/bin/activate
            # Build a wheel release
            make build
      - store_artifacts:
          path: dist
      - persist_to_workspace:
          root: .
          paths:
            - .

  publish:
    docker:
      - image: cimg/python:3.9.2
    steps:
      - attach_workspace:
          at: .
      - deploy:
          name: Publish on PyPI
          command: |
            source venv/bin/activate
            FLIT_USERNAME=${PYPI_USERNAME} FLIT_PASSWORD=${PYPI_PASSWORD} make publish

workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
      - publish:
          requires:
            - build
          filters:
            branches:
              only:
                - main
                - /[0-9]+(\.[0-9]+)+/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
          context: org-global
